"use client"

import React, { useState, useEffect, useCallback, useMemo } from 'react'

interface Feature {
  id: number
  title: string
  description: string
  icon: string
}

export const ReactFeatures: React.FC = () => {
  const [selectedFeature, setSelectedFeature] = useState<number | null>(null)
  const [isAnimating, setIsAnimating] = useState(false)

  const features: Feature[] = useMemo(() => [
    {
      id: 1,
      title: "–•—É–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è",
      description: "useState –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞",
      icon: "üî¥"
    },
    {
      id: 2,
      title: "–≠—Ñ—Ñ–µ–∫—Ç—ã",
      description: "useEffect –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤",
      icon: "üü¢"
    },
    {
      id: 3,
      title: "–ú–µ–º–æ–∏–∑–∞—Ü–∏—è",
      description: "useMemo –∏ useCallback –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
      icon: "üîµ"
    },
    {
      id: 4,
      title: "–ö–æ–Ω—Ç–µ–∫—Å—Ç",
      description: "useContext –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –¥–µ—Ä–µ–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤",
      icon: "üü°"
    }
  ], [])

  const handleFeatureClick = useCallback((id: number) => {
    setIsAnimating(true)
    setSelectedFeature(id)
    setTimeout(() => setIsAnimating(false), 300)
  }, [])

  useEffect(() => {
    const interval = setInterval(() => {
      if (!selectedFeature) {
        setSelectedFeature(1)
      }
    }, 3000)

    return () => clearInterval(interval)
  }, [selectedFeature])

  return (
    <div className="p-6 bg-white rounded-lg shadow-lg">
      <h3 className="text-xl font-bold mb-6 text-center text-gray-800">
        –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ React
      </h3>
      
      <div className="grid grid-cols-2 gap-4 mb-6">
        {features.map((feature) => (
          <button
            type="button"
            key={feature.id}
            onClick={() => handleFeatureClick(feature.id)}
            onKeyDown={(e) => {
              if (e.key === 'Enter' || e.key === ' ') {
                handleFeatureClick(feature.id)
              }
            }}
            className={`p-4 rounded-lg cursor-pointer transition-all duration-300 text-left ${
              selectedFeature === feature.id
                ? 'bg-blue-100 border-2 border-blue-400 scale-105'
                : 'bg-gray-50 hover:bg-gray-100'
            } ${isAnimating ? 'animate-pulse' : ''}`}
          >
            <div className="text-2xl mb-2">{feature.icon}</div>
            <h4 className="font-semibold text-sm text-gray-800">{feature.title}</h4>
          </button>
        ))}
      </div>

      {selectedFeature && (
        <div className="p-4 bg-blue-50 rounded-lg border border-blue-200">
          <h4 className="font-semibold text-blue-800 mb-2">
            {features.find(f => f.id === selectedFeature)?.title}
          </h4>
          <p className="text-sm text-blue-700">
            {features.find(f => f.id === selectedFeature)?.description}
          </p>
        </div>
      )}

      <div className="mt-4 text-center text-xs text-gray-500">
        <p>‚úÖ –í—Å–µ React –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</p>
        <p>‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–µ–Ω</p>
        <p>‚úÖ –ê–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã –ø–ª–∞–≤–Ω—ã–µ</p>
      </div>
    </div>
  )
}
